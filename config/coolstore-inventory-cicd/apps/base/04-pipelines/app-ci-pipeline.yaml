apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  creationTimestamp: null
  name: app-ci-pipeline
  namespace: coolstore-inventory-cicd
spec:
  finally:
  - name: set-final-status
    params:
    - name: REPO
      value: $(params.REPO)
    - name: GIT_REPO
      value: $(params.GIT_REPO)
    - name: COMMIT_SHA
      value: $(params.COMMIT_SHA)
    - name: DESCRIPTION
      value: The build is complete
    - name: STATE
      value: $(tasks.build-image.status)
    taskRef:
      kind: Task
      name: set-commit-status
  params:
  - name: REPO
    type: string
  - name: COMMIT_SHA
    type: string
  - name: TLSVERIFY
    type: string
  - name: BUILD_EXTRA_ARGS
    type: string
  - name: IMAGE
    type: string
  - name: GIT_REF
    type: string
  - name: COMMIT_DATE
    type: string
  - name: COMMIT_AUTHOR
    type: string
  - name: COMMIT_MESSAGE
    type: string
  - name: GIT_REPO
    type: string
  - name: GITOPS_REPO
    type: string
  - name: ENV_CONFIG_LOCATION
    type: string
  - name: ARGO_APP_NAME
    type: string
  tasks:
  - name: set-pending-status
    params:
    - name: REPO
      value: $(params.REPO)
    - name: GIT_REPO
      value: $(params.GIT_REPO)
    - name: COMMIT_SHA
      value: $(params.COMMIT_SHA)
    - name: DESCRIPTION
      value: The build has started
    - name: STATE
      value: pending
    taskRef:
      kind: Task
      name: set-commit-status

  - name: clone-source
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REF)
    runAfter:
    - set-pending-status
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data

  - name: package-app
    taskRef:
      kind: Task
      name: maven
    runAfter:
    - clone-source
    workspaces:
    - name: source
      workspace: shared-data
    - name: maven-settings
      workspace: maven-settings
    params:
    - name: GOALS
      value:
      - -DskipTests
      - clean
      - package
#      - -Dquarkus.profile=prod
#      - -Dquarkus.kubernetes.deploy=false

  - name: build-image
    params:
    - name: TLSVERIFY
      value: $(params.TLSVERIFY)
    - name: BUILD_EXTRA_ARGS
      value: --label=io.openshift.build.commit.author='$(params.COMMIT_AUTHOR)' --label=io.openshift.build.commit.date='$(params.COMMIT_DATE)'
        --label=io.openshift.build.commit.id='$(params.COMMIT_SHA)' --label=io.openshift.build.commit.message='$(params.COMMIT_MESSAGE)'
        --label=io.openshift.build.commit.ref='$(params.GIT_REF)'
    - name: IMAGE
      value: $(params.IMAGE)
    - name: DOCKERFILE
      value: ./src/main/docker/Dockerfile.jvm
    runAfter:
    - package-app
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
    - name: source
      workspace: shared-data

  - name: clone-gitops-config
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-data
    runAfter:
    - build-image
    params:
    - name: url
      value: $(params.GITOPS_REPO)
    - name: deleteExisting
      value: "true"

  - name: deploy-to-dev
    taskRef:
      name: update-deployment-manifest
    runAfter:
    - clone-gitops-config
    params:
    - name: environment
      value: $(params.ENV_CONFIG_LOCATION)
    - name: appImage
      value: $(params.IMAGE)
    - name: application-name
      value: $(params.ARGO_APP_NAME)
    - name: flags
      value: --grpc-web
    workspaces:
    - name: config-source
      workspace: shared-data

  workspaces:
  - description: This workspace will receive the cloned git repo.
    name: shared-data
  - description: This workspace containes Maven settings.
    name: maven-settings