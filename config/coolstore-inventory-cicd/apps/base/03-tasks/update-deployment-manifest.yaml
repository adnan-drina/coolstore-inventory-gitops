apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: update-deployment-manifest
spec:
  params:
    - name: environment
    - name: appImage
    - name: imageRepo
    - name: application-name
      description: name of the application to sync
    - name: revision
      description: the revision to sync to
      default: HEAD
    - name: flags
      default: --
    - name: argocd-version
      default: v1.7.7
  stepTemplate:
    envFrom:
      - configMapRef:
          name: argocd-env
      - secretRef:
          name: argocd-user

  workspaces:
    - name: config-source
      description: The git repo will be cloned onto the volume backing this Workspace.

  steps:
    - name: update-yaml
      image: alpine/git:v2.26.2
      workingDir: "$(workspaces.config-source.path)/$(inputs.params.environment)"
      script: |
        #!/usr/bin/env sh
        set -e

        echo "updating $(workspaces.config-source.path)/$(inputs.params.environment) image to $(inputs.params.appImage) in repo $(inputs.params.imageRepo)"
        sed -i "s|$(inputs.params.imageRepo):[a-zA-Z0-9.-]\\+|$(inputs.params.appImage)|g" 100-deployment.yaml

    - name: commit-push-changes-gitops
      image: alpine/git:v2.26.2
      workingDir: "$(workspaces.config-source.path)"
      script: |
        #!/usr/bin/env sh
        set -e

        git config --global user.email "adnan.drina@gmail.com"
        git config --global user.name "adnan-drina"
        git config --global url.ssh://git@github.com/.insteadOf https://github.com/

        git fetch
        git checkout main
        git status
        git add .
        git commit --allow-empty -m "[tekton] updating image to $(inputs.params.appImage)"
        git push origin main

    - name: deploy-with-argo
      image: docker.io/argoproj/argocd:$(params.argocd-version)
      script: |
        if [ -z $ARGOCD_AUTH_TOKEN ]; then
        yes | argocd login $ARGOCD_SERVER --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD $(params.flags);
        fi
        argocd app sync $(params.application-name) --async --revision $(params.revision) $(params.flags)
        argocd app wait $(params.application-name) --sync --health $(params.flags)
---